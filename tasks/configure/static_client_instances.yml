---

- name: define client name to '{{ client.name }}'
  set_fact:
    openvpn_client_name: "{{ client.name }}"

- name: redefine service name
  set_fact:
    openvpn_service_name: "openvpn-client@{{ openvpn_client_name }}"

- name: create client key directory
  file:
    state: directory
    path: '{{ openvpn_directory }}/keys/{{ openvpn_client_name }}/'
    mode: 0755
  tags:
    - setup
    - openvpn

- name: detect client certificate file
  stat:
    path: "{{ openvpn_directory }}/keys/{{ openvpn_client_name }}/{{ openvpn_client_name }}.crt"
    checksum_algorithm: sha256
  register: _client_checksum

- name: detect server certificate file
  delegate_to: "{{ client.remote }}"
  stat:
    path: "{{ openvpn_easyrsa.directory }}/pki/issued/{{ openvpn_client_name }}.crt"
    checksum_algorithm: sha256
  register: _server_checksum

- name: compare checksums
  set_fact:
    certificate_equal: "{{
      _client_checksum.stat.checksum | default('xx_client') == _server_checksum.stat.checksum | default('xx_server')
    }}"

- name: export client certificate from openvpn server
  delegate_to: "{{ client.remote }}"
  block:
    - name: create export directory
      file:
        state: directory
        path: /tmp/openvpn-export
        mode: 0700

    - name: mount tmpfs to export
      mount:
        name: /tmp/openvpn-export
        src: tmpfs
        fstype: tmpfs
        opts: nodev,nosuid,size=1M
        state: mounted

    - name: create export directory for client
      file:
        state: directory
        path: "/tmp/openvpn-export/{{ openvpn_client_name }}"
        mode: 0700

    - name: copy files for export
      copy:
        remote_src: true
        src: "{{ file }}"
        dest: "/tmp/openvpn-export/{{ openvpn_client_name }}/"
        mode: 0600
      loop:
        - "{{ openvpn_directory }}/keys/server/ta.key"
        - "{{ openvpn_easyrsa.directory }}/pki/private/{{ openvpn_client_name }}.key"
        - "{{ openvpn_easyrsa.directory }}/pki/issued/{{ openvpn_client_name }}.crt"
        - "{{ openvpn_easyrsa.directory }}/pki/ca.crt"
      loop_control:
        loop_var: file

    - name: create archive with certificate files
      delegate_to: "{{ client.remote }}"
      archive:
        format: gz
        path: "/tmp/openvpn-export/{{ openvpn_client_name }}"
        dest: "/root/vpn-configs/{{ openvpn_client_name }}.tar.gz"
        mode: 0600

    - name: umount export tmpfs
      mount:
        name: /tmp/openvpn-export
        src: tmpfs
        state: unmounted

    - name: copy created certificates from openvpn server
      delegate_to: "{{ client.remote }}"
      fetch:
        src: "/root/vpn-configs/{{ openvpn_client_name }}.tar.gz"
        dest: "{{ openvpn_local_tmp_directory }}/{{ openvpn_client_name }}.tar.gz"
        flat: true
  when:
    - not _client_checksum.stat.exists or not certificate_equal

- name: detect certificate archive on ansible controller
  delegate_to: localhost
  stat:
    path: "{{ openvpn_local_tmp_directory }}/{{ openvpn_client_name }}.tar.gz"
  register: _certificate_archive

- name: unarchive certificates
  unarchive:
    src: "{{ openvpn_local_tmp_directory }}/{{ openvpn_client_name }}.tar.gz"
    dest: "{{ openvpn_directory }}/keys/"
    owner: "{{ openvpn_owner }}"
    group: "{{ openvpn_group }}"
  when:
    - _certificate_archive.stat.exists
    - not certificate_equal

- name: fix rights for openvpn key file
  file:
    path: "{{ openvpn_directory }}/keys/{{ openvpn_client_name }}/{{ openvpn_client_name }}.key"
    mode: 0600

- name: create openvpn client config
  template:
    src: openvpn/clients/client.conf.j2
    dest: "{{ openvpn_directory }}/client/{{ openvpn_client_name }}.conf"
    mode: 0640
  notify:
    - restart openvpn-client

- name: create link for openrc init
  file:
    src: "{{ openvpn_directory }}/client/{{ openvpn_client_name }}.conf"
    dest: "{{ openvpn_directory }}/{{ openvpn_client_name }}.conf"
    owner: "{{ openvpn_owner }}"
    group: "{{ openvpn_group }}"
    state: link
    force: true
  when:
    - ansible_distribution | lower == "archlinux"
    - ansible_service_mgr | lower == "openrc"
  notify:
    - restart openvpn-server

...
