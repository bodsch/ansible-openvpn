---

- name: create temporary transfer directory on ansible controller
  become: false
  delegate_to: localhost
  ansible.builtin.file:
    path: "{{ openvpn_local_tmp_directory }}"
    state: directory
    mode: 0700

- name: create target directory for generated client certificates
  ansible.builtin.file:
    state: directory
    path: /root/vpn-configs
    mode: 0700

- name: get CA certificate
  become: false
  delegate_to: localhost
  ansible.builtin.slurp:
    src: '{{ openvpn_local_tmp_directory }}/ca.crt'
  register: openvpn_ca_cert
  no_log: true

- name: get TA key
  become: false
  delegate_to: localhost
  ansible.builtin.slurp:
    src: '{{ openvpn_local_tmp_directory }}/ta.key'
  register: openvpn_ta_key
  no_log: true

- name: create openvpn client configuration template
  ansible.builtin.template:
    src: openvpn/client_users/client.ovpn.template.j2
    dest: '{{ openvpn_directory }}/client.ovpn.template'
    mode: '0600'
    owner: root
    group: root
  register: _changed_template

- name: define static and roadrunner clients
  ansible.builtin.set_fact:
    static_clients: "{{ openvpn_mobile_clients | clients_type('static') }}"
    roadrunner_clients: "{{ openvpn_mobile_clients | clients_type('roadrunner') }}"

- name: create or revoke client certificate
  delegate_to: "{{ client.remote }}"
  openvpn_client_certificate:
    state: "{{ client.state }}"
    username: "{{ client.name }}"
  args:
    chdir: '{{ openvpn_easyrsa.directory }}'
  loop:
    "{{ openvpn_mobile_clients }}"
  loop_control:
    index_var: index
    loop_var: client
    label: "{{ client.name }}, state: {{ client.state }}"

- name: create openvpn client configs
  ansible.builtin.include_tasks: configure/static_client_instances.yml
  loop: "{{ static_clients }}"
  loop_control:
    index_var: index
    loop_var: client
    label: "client: {{ client.name }}"
  when:
    - client is defined

- name: create openvpn client configs for roadrunners
  ansible.builtin.include_tasks: configure/roadrunners.yml
  loop: "{{ roadrunner_clients }}"
  loop_control:
    index_var: index
    loop_var: client
    label: "client: {{ client.name }}"
  when:
    - client is defined

...
